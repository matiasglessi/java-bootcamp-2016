{
    "swagger": "2.0",
    "info": {
        "description": "Topic 6: API to register users.",
        "version": "2.0",
        "title": "Users REST API",
        "contact": {
            "name": "Matias Glessi"
        },
        "license": {
            "name": "Apache License Version 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost:8080",
    "basePath": "/",
    "tags": [
        {
            "name": "user-controller",
            "description": "Users API"
        }
    ],
    "paths": {
        "/api/users": {
            "get": {
                "tags": [
                    "user-controller"
                ],
                "summary": "getUsers",
                "operationId": "getUsersUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successful return list of existents users.",
                        "schema": {
                            "$ref": "#/definitions/Collection«User»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found any users."
                    }
                }
            },
            "post": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Create user",
                "description": "Creates a new user.",
                "operationId": "createUserUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "201": {
                        "description": "Successful create of an user.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "406": {
                        "description": "Not acceptable user for creation."
                    }
                }
            },
            "put": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Update user",
                "description": "Updates an existing user.",
                "operationId": "updateUserUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "201": {
                        "description": "Successful update of an user.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "406": {
                        "description": "Non existent user."
                    }
                }
            },
            "delete": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Delete user",
                "description": "Deletes an existing user.",
                "operationId": "deleteUserUsingDELETE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "204": {
                        "description": "Successful delete of an user.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Non existent user."
                    }
                }
            }
        },
        "/api/users/findByName": {
            "get": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Find user by name",
                "description": "Finds user serching by it's name.",
                "operationId": "getUserByNameUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful finding of an user by name.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Non existent user."
                    }
                }
            }
        },
        "/api/users/findByNickname": {
            "get": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Find user by nickname",
                "description": "Finds user serching by it's nickname.",
                "operationId": "getUserByNicknameUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "nickname",
                        "in": "query",
                        "description": "nickname",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful finding of an user by nickname.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Non existent user."
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "required": [
                "name",
                "nickname",
                "pass"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The id of the User"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user"
                },
                "nickname": {
                    "type": "string",
                    "description": "The nickname of the user"
                },
                "pass": {
                    "type": "string",
                    "description": "The password of the user"
                }
            },
            "description": "Complete data of an user."
        }
    }
}